import time
from sentence_transformers import SentenceTransformer
from keybert import KeyBERT
from transformers import BartTokenizer, BartForConditionalGeneration, pipeline
model = SentenceTransformer('bucket_query/local_model')
kw_model = KeyBERT(model=model)

start_time = time.time()
text = "1. A data processing method for preparing a dataset implemented by a processor that receives a plurality of data input streams from different data providers, wherein the plurality of data input streams pass through said processor to prepare an output dataset, wherein the plurality of data input streams and the output dataset are different,\nsaid data processing method comprising:\nproviding said processor, wherein via said processor,\nreceiving the plurality of data input streams from said different data providers that comprise industrial production sensors;\nstandardizing the plurality of data input streams to normalize the plurality of data input streams at an input of the processor;\nencoding the plurality of data input streams that are normalized, to transform the plurality of data input streams that are normalized into a plurality of normalized and encrypted data input streams;\npreprocessing the dataset from the plurality of normalized and encrypted data input streams, said preprocessing comprising\ndata augmentation to complete missing data taking into account a consistency of the plurality of normalized and encrypted data input streams with predefined correlation tables,\nproviding functions that comprise a plurality of different functions that allow a detection of outliers in the plurality of normalized and encrypted data input streams,\nremoving said outliers from the plurality of normalized and encrypted data input streams, by processing said plurality of normalized and encrypted data input streams with said functions,\nverifying a fit of the plurality of normalized and encrypted data input streams processed with the functions, said verifying comprising providing feedback to take actions aiming at injecting the plurality of normalized and encrypted data input streams that are processed back into the processor when the fit of the plurality of normalized and encrypted data input streams that are processed with the functions is divergent, and\nselecting a function of said functions for which the fit between said function and one of the plurality of data input streams comprises a smallest discrepancy;\n\n\ngenerating a preprocessed dataset, said preprocessed dataset including\nsaid plurality of normalized and encrypted data input streams,\nnew data generated during said data augmentation, and\nnew data replacing said outliers;\n\ndisplaying to a user, on a display associated with said processor,\nsaid functions,\nsaid consistency of the plurality of normalized and encrypted data input streams with predefined correlation tables,\nthe fit of the plurality of normalized and encrypted data input streams processed with the functions, and\na table containing fit indices for each variable present in the plurality of normalized and encrypted data input streams; and,\n\ntransmitting said preprocessed dataset to a machine learning model that is trained to monitor an industrial process via supervised or unsupervised learning techniques,\nsuch that said machine learning model is trained to one or more of predict maintenance, detect failure, detect fraud and detect cyber-attacks."
keywords = kw_model.extract_keywords(
    text,
    keyphrase_ngram_range=(2, 5),
    stop_words='english',
    use_mmr=True,
    diversity=0.7,
    top_n=5
)
print(time.time() - start_time)
keywords_list= list(dict(keywords).keys())

local_bart_path = "data/bart-large-cnn"
text = ['1 . A data processing system including an information processing device and an information display device, wherein the information processing device includes: a data registration part configured to register a plurality of pieces of data acquired by a predetermined data acquisition device as data handled by the data processing system in a state where each piece of the data and at least one type of accompanying information of each piece of the data are associated with each other; a registration data holder that holds data registered by the data registration part; a data tree creator configured to group the plurality of pieces of data held in the registration data holder by using the accompanying information of an optionally selected type so that pieces of the data having a common piece of the accompanying information belong to a same group, and to create a data tree virtually indicating a state in which the plurality of pieces of data are distributed into groups; and an information display part configured to display a data tree created by the data tree creator on the information display device.', '2 . The data processing system according to claim 1 , wherein the data registration part is configured to perform registration of the plurality of pieces of data in a state where a plurality of types of the accompanying information are associated with each of the plurality of pieces of data, and the data tree creator is configured, in a case where a plurality of types of the accompanying information are set to be used for the grouping, to create the data tree having a hierarchical structure in which the accompanying information of a type that is higher in priority order set in advance for each type of the accompanying information is located on a higher layer.', '3 . The data processing system according to claim 2 , wherein the information processing device is configured so that the priority order is optionally changeable.', '4 . The data processing system according to claim 1 , wherein the data is an image of cell culture or a numerical value acquired by analysis of the image, and the accompanying information includes at least one of a passage number and a number of culture days.', '5 . The data processing system according to claim 1 , wherein the data is a numerical value acquired by analysis, and the information processing device further includes a graph creator that creates a graph having a first axis and a second axis based on a structure of the data tree created by the data tree creator, wherein the first axis indicates each numerical value of the plurality of pieces of data, and the second axis indicates at least one piece of the accompanying information used for the grouping based on a structure of the data tree created by the data tree creator.', '6 . A data processing method comprising: a registration step of registering a plurality of pieces of data acquired by a predetermined data acquisition device in a state where the data and at least one type of accompanying information of each piece of the data are associated with each other; a tree creation step of grouping the plurality of pieces of data registered in the registration step by using the accompanying information of an optionally selected type so that pieces of the data having a common piece of the accompanying information belong to a same group, and creating a data tree virtually indicating a state in which the plurality of pieces of data are distributed into groups; and a display step of displaying a data tree created in the tree creation step on a predetermined information display device.', '7 . The data processing method according to claim 6 , wherein in the registration step, a plurality of types of the accompanying information are registered in association with each of the plurality of pieces of data, and in the tree creation step, the data tree having a hierarchical structure in which the accompanying information of a type that is higher in priority order set in advance for each type of the accompanying information is located on a higher layer is created.', '8 . The data processing method according to claim 7 , further comprising an order changing step of changing the priority order.', '9 . The data processing method according to claim 6 , further comprising a graph creation step of creating, in a case where the data is a numerical value acquired by analysis, a graph having a first axis and a second axis based on a structure of the data tree created in the tree creation step, wherein the first axis indicates each numerical value of the plurality of pieces of data, and the second axis indicates at least one piece of the accompanying information used for the grouping.', '10 . A computer program configured to execute the data processing method according to claim 6 by being applied to an information processing device.']
all_text = " ".join(text)
bart_tokenizer = BartTokenizer.from_pretrained(local_bart_path)
bart_model = BartForConditionalGeneration.from_pretrained(local_bart_path)  
summarizer = pipeline("summarization", model=bart_model, tokenizer=bart_tokenizer,device="cuda")
start_time = time.time()
summary = summarizer(all_text, max_length=150, min_length=40, length_penalty=2.0, num_beams=4, early_stopping=True)
print(time.time() - start_time)
print(summary[0]["summary_text"])